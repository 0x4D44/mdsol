from pathlib import Path
path = Path(r"C:\language\mdsol\src\main.rs")
text = path.read_text()
old = "                    VictoryAnimation::Classic(classic) => {\n                        for clone in &classic.clones {\n                            let x = clone.pos.0.round() as i32;\n                            let y = clone.pos.1.round() as i32;\n                            draw_face_up(&clone.card, x, y);\n                        }\n                    }\n"
if old not in text:
    raise SystemExit('pattern not found for paint classic block')
new = "                    VictoryAnimation::Classic(classic) => {\n                        if let Some(layer) = classic.layer.as_ref() {\n                            let (layer_w, layer_h) = classic.layer_size;\n                            if layer_w > 0 && layer_h > 0 {\n                                let blend = BLENDFUNCTION {\n                                    BlendOp: AC_SRC_OVER as u8,\n                                    BlendFlags: 0,\n                                    SourceConstantAlpha: 255,\n                                    AlphaFormat: AC_SRC_ALPHA as u8,\n                                };\n                                unsafe {\n                                    AlphaBlend(\n                                        back.dc,\n                                        0,\n                                        0,\n                                        layer_w,\n                                        layer_h,\n                                        layer.dc,\n                                        0,\n                                        0,\n                                        layer_w,\n                                        layer_h,\n                                        blend,\n                                    );\n                                }\n                            }\n                        }\n                        for emitter in &classic.emitters {\n                            if !emitter.emitted || emitter.finished {\n                                continue;\n                            }\n                            let x = emitter.pos.0.round() as i32;\n                            let y = emitter.pos.1.round() as i32;\n                            draw_face_up(&emitter.card, x, y);\n                        }\n                    }\n"
path.write_text(text.replace(old, new, 1))
